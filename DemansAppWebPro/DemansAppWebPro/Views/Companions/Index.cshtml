﻿@{
    ViewData["Title"] = "Companions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css{
    <style type="text/css">
        .table_style {
            overflow: auto;
            max-width: 150px;
            text-align: center;
        }

        .table_style {
            text-align: center !important
        }

        div.dataTables_wrapper div.dataTables_length select {
            width: 50px !important;
        }

        div.dataTables_wrapper div.dataTables_length label {
            margin-left: 10px !important;
            margin-top: 13px !important;
        }

        div.dataTables_wrapper div.dataTables_info {
            margin-left: 10px !important;
        }

        div.dataTables_wrapper div.dataTables_filter input {
            margin-right: 10px !important;
            margin-top: 13px !important;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 2px !important
        }

        div.dataTables_wrapper div.dataTables_paginate {
            margin-right: 10px !important
        }

        .modal-input-style {
            margin-left: 10px !important;
        }

        .modal-label-style {
            padding-left: 20px !important;
        }
        .dropdown-style{
            background-color: white;
            border: 1px solid #aaa;
            border-radius: 6px;
            cursor: text;
            padding-bottom: 8px;
            position: relative;
            padding-top: 8px;
            margin-left: 20px !important;
            width: 340px;
        }
    </style>
}

<div class="card card-top">
    <div class="card-header">
        <div class="row text-center">
            <h3 class="page-title col-sm-10">Refakatçiler</h3>
            <button type="button" class="btn btn btn-outline-dark col-sm-2 align-self-end" data-bs-toggle="modal" onclick="javascripts: showModal();">Refakatçi Ekle</button>
        </div>
    </div>
</div>
<div class="card">
    <div class="table-responsive">
        <table id="companion_table" class="table table-striped table-bordered dt-responsive nowrap" style="vertical-align:middle; width:100%;">
            <thead>
                <tr>
                    <th class="table-style">Id</th>
                    <th class="table-style">Ad Soyad</th>
                    <th class="table-style">Adres</th>
                    <th class="table-style">E-posta</th>
                    <th class="table-style">Telefon</th>
                    <th class="table-style">Cinsiyet</th>
                    <th class="table-style">Refakatçi Olduğu Kişi</th>
                    <th class="table-style">Düzenle/Sil</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div class="card-body">
</div><!--end Companion Table-->

<div class="modal fade" id="companionModal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="companionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal_style" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title m-0" id="companionModalLabel">Refakatçi Ekle / Güncelle</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" onclick="reload();" aria-label="Close"></button>
            </div><!--end modal-header-->
            <div class="modal-body">
                <form id="companionsAddOrUpdate-form">
                    <input type="hidden" value="0" id="AddOrUpdateId" name="AddOrUpdateId" />

                    <div class="mb-3 row userdropdown">
                        <label for="Dropdown1" class="modal-label-style col-sm-3 form-label align-self-center mb-lg-0">Kullanıcı</label>
                        <select class="col-sm-8 dropdown-control dropdown-style" id="Dropdown1" name="Dropdown1"></select>
                    </div>

                    <div class="mb-3 row">
                        <label for="refakatciAdi" class="modal-label-style col-sm-3 form-label align-self-center mb-lg-0">Refakatçi Adı</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control modal-input-style" id="refakatciAdi" placeholder="Refakatçi Adı">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="refakatciSoyadi" class="modal-label-style col-sm-3 form-label align-self-center mb-lg-0">Refakatçi Soyadı</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control modal-input-style" id="refakatciSoyadi" placeholder="Refakatçi Soyadı">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="adres" class="modal-label-style col-sm-3 form-label align-self-center mb-lg-0">Adres</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control modal-input-style" id="adres" placeholder="Adres">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="eposta" class="modal-label-style col-sm-3 form-label align-self-center mb-lg-0">E-posta</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control modal-input-style" id="eposta" placeholder="E-posta">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label for="tel" class="modal-label-style col-sm-3 form-label align-self-center mb-lg-0">Telefon</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control modal-input-style" id="tel" placeholder="(XXX)XXX XX XX">
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <label class="col-sm-3 form-label modal-label-style " style="font-weight:bold">Cinsiyet</label>
                        <div class="col-sm-7" style="margin-left:13px;">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="sex" id="women" value="0"/>
                                <label class="form-check-label" for="women">Kadın</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="sex" id="men" value="1"/>
                                <label class="form-check-label" for="men">Erkek</label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-sm" onclick="javascript:getUpdateOrAdd();">TAMAM</button>
                <button type="button" class="btn btn-primary btn-sm" onclick="reload();" data-bs-dismiss="modal">VAZGEÇ</button>
            </div>
        </div>
    </div>
</div><!--end AudioBook's Modal-->
@section scripts {
    <script type="text/javascript">

        var companionTablo = null;

        $((_$) => {
            showCompanions();
            reload();
            dropdown1();
        });

        var showModal = () => {
            $('#refakatciAdi').val('');
            $('#refakatciSoyadi').val('');
            $('#adres').val('');
            $('#eposta').val('');
            $('#tel').val('');
            document.getElementById('women').checked = true;

            $('#companionModal').modal('show');
        }

        var reload = () => {
            document.getElementById("companionsAddOrUpdate-form").reset();
        }

        var showCompanions = () => {
            if (companionTablo == null)
                companionTablo = $('#companion_table').DataTable({
                    language: { url: '../dil.json' },
                    processing: true,
                    serverSide: true,
                    paging: true,
                    filter: true,
                    scrollCollapse: true,
                    orderMulti: true,
                    order: [[1, "asc"]],
                    ajax: {
                        url: '@Url.Action("ShowCompanions", "Companions")',
                        type: "POST",
                        datatype: "json"
                    },
                    createdRow: function (row, data, dataIndex) {
                    },
                    columnDefs: [{ "defaultContent": "-", "targets": "_all" }],
                    columns: [
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                return row.Id;
                            }, "name": "Id"
                        },
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                var adsoyad = row.Name + ' ' + row.Surname;
                                return adsoyad;
                            }, "name": "Name", "name": "Surname"
                        },
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                return row.Adress;
                            }, "name": "Adress"
                        },
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                return row.Email;
                            }, "name": "Email"
                        },
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                return row.Phone;
                            }, "name": "Phone"
                        }, 
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                var cinsiyet ;
                                if(row.Sex == true){cinsiyet = "Kadın";}
                                else{cinsiyet = "Erkek";}
                                return cinsiyet;
                            }, "name": "Sex"
                        },
                        {
                            "className": "table_style",
                            "render": (data, type, row) => {
                                var kullanici_ad_soyad = row.UserName + ' ' + row.UserSurname;
                                return kullanici_ad_soyad;
                            }, "name": "UserName", "name": "UserSurname"
                        },
                        {
                            "className": "table_style",
                            "render": function (data, type, row) {
                                return `<button type="button" class="btn btn btn-outline-dark pt-2" onclick="javascript:getsetModal(${row.Id})"><i class="dripicons-document-edit"></i></button>

                                        <button type="button" class="btn btn btn-outline-dark pt-2" onclick="javascript:deleteCompanions(${row.Id})"><i class="dripicons-trash"></i></button>`;

                            }, "name": "Id", "name": "Id"
                        },
                        
                    ],
                    fixedColumns: true,
                    scrollCollapse: true,
                    initComplete: function (settings, json) {
                        $('#companion_table_filter input').unbind();
                        $('#companion_table_filter input').bind('keyup', function (e) {
                            if (e.keyCode == 13) {
                                companionTablo.search(this.value).draw();
                            }
                        });

                        $('.dataTables_scrollBody').removeAttr('style').css({
                            'position': 'relative',
                            'overflow-y': 'auto',
                            'overflow-x': 'auto',
                            'width': '100%',
                            'max-height': ((window.innerHeight / 2) + 120) + 'px'
                        });

                    }

                })
        }

        var dropdown1 = (sId) => {

            $.getJSON('@Url.Action("Dropdown1", "Companions")', { sId: sId }, (d, s) => {

                for (var i = 0; i < d.data.length; i++) {
                    $('#Dropdown1').empty();
                    var s = s + '<option value="' + d.data[i].Id + '">' + d.data[i].UserName + ' ' + d.data[i].Surname + '</option>';
                }
                $("#Dropdown1").html(s);
            
            })
        }

        var getUpdateOrAdd = () => {

            if (document.getElementById("AddOrUpdateId").value > 0) {
                javascript: updateCompanion();
            }
            else {
                javascript: addCompanion();
            }
        }

        var addCompanion = () => {

            var UserControl = $('[id = "Dropdown1"]').val();
            var CompanionNameControl = $('[id = "refakatciAdi"]').val();
            var CompanionSurnameControl = $('[id ="refakatciSoyadi"]').val();
            var AddressControl = $('[id ="adres"]').val();
            var EpostaControl = $('[id ="eposta"]').val();
            var PhoneControl = $('[id ="tel"]').val();
            var SexControl = true;
            if (document.getElementById('women').checked == true) {
                SexControl = true;
                console.log("true" + SexControl);
            }
            else {
                SexControl = false;
                console.log("false" + SexControl);

            }

            if (!UserControl || !CompanionNameControl || !CompanionSurnameControl || !AddressControl || !EpostaControl || !PhoneControl ) {
                Command: toastr["warning"]("Lütfen Kullanıcı / Refakatçi Adı / Refakatçi Soyadı / Adres / Email / Telefon bilgisini giriniz.", "Ekleme başarısız!")
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": false,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "8000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                return;
            }
            var formData = new FormData();
            formData.append('UserId', UserControl);
            formData.append('Name', CompanionNameControl);
            formData.append('Surname', CompanionSurnameControl);
            formData.append('Adress', AddressControl);
            formData.append('Email', EpostaControl);
            formData.append('Phone', PhoneControl);
            formData.append('Sex', SexControl);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddCompanion","Companions")',
                data: formData,
                async: true,
                contentType: false,
                processData: false,
                success: data => {

                    if (data.Status == true) {

                        Command: toastr["success"]("Ekleme işlemi başarıyla gerçekleşti.")

                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": false,
                            "positionClass": "toast-top-right",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "8000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        document.getElementById("companionsAddOrUpdate-form").reset();

                        $('#companionModal').modal('hide');

                        if (companionTablo != null)
                            companionTablo.ajax.reload();
                    }
                    else {
                        Command: toastr["error"]("Ekleme işlemi gerçekleşemedi.'")

                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": false,
                            "positionClass": "toast-top-right",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "8000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                    }
                    $('#companionModal').modal('hide');
                },
            });
        }

        var getsetModal = (sId) => {

            dropdown1(sId);
            $('#AddOrUpdateId').val("");
            $.getJSON('@Url.Action("GetCompanions", "Companions")', { sId: sId }, (d, s) => {
                if (s === 'success') {
                    $('#refakatciAdi').val(d.data.Name);
                    $('#refakatciSoyadi').val(d.data.Surname);
                    $('#adres').val(d.data.Adress);
                    $('#eposta').val(d.data.Email);
                    $('#tel').val(d.data.Phone);

                    if(d.data.Sex == true){
                        document.getElementById('women').checked = true;
                    }else{
                        document.getElementById('men').checked = true;
                    }
                    $('#AddOrUpdateId').val(d.data.Id);
                    $('#companionModal').modal('show');
                }
            })
        }

        var updateCompanion = () => {

            var Id = document.getElementById("AddOrUpdateId").value;
            var Name = document.getElementById("refakatciAdi").value;
            var Surname = document.getElementById("refakatciSoyadi").value;
            var Adres = document.getElementById("adres").value;
            var Email = document.getElementById("eposta").value;
            var Phone = document.getElementById("tel").value;
            var Sex = true;
            if (document.getElementById('women').checked == true){
                Sex = true;
            }else{
                Sex = false;
            }


            if (!Name || !Surname || !Adres || !Email || !Phone ) {
                Command: toastr["warning"]("Lütfen Refakatçi Adı / Refakatçi Soyadı / Adres / E-posta / Telefon bilgisini giriniz.", "Ekleme başarısız!")
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": false,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "8000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                return;
            }
            var formData = new FormData(document.getElementById('companionsAddOrUpdate-form'));
            formData.append('Id', Id);
            formData.append('Name', Name);
            formData.append('Surname', Surname);
            formData.append('Adress', Adres);
            formData.append('Email', Email);
            formData.append('Phone', Phone);
            formData.append('Sex', Sex);

            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateCompanions","Companions")',
                data: formData,
                processData: false,
                contentType: false,
                cache: false,
                success: function (d) {
                    if (d.Status == true) {
                        console.log('Gelen -> ', d);

                        Command: toastr["success"]("Güncelleme işlemi başarıyla gerçekleşti.")

                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": false,
                            "positionClass": "toast-top-right",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "8000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        if (companionTablo != null)
                            companionTablo.ajax.reload();
                    }
                    else {
                        Command: toastr["error"]("Güncelleme işlemi gerçekleşemedi.'")

                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": false,
                            "positionClass": "toast-top-right",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "8000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                    }
                },
            });
            if (companionTablo != null)
                companionTablo.ajax.reload();

            $('#companionModal').modal('hide');
        }

        var deleteCompanions = (delId) => {
            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                icon: 'question',
                showCancelButton: true,
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#4a804d',
                cancelButtonColor: '#b22222',
                confirmButtonText: 'Evet'
            })
                .then((result) => {

                    if (result.value == true) {
                        $.getJSON('@Url.Action("DeleteCompanions","Companions")', { pr: delId }, (d, s) => {
                            if (s === "success") {

                                if (d.Status == true) {
                                    companionTablo.ajax.reload();
                                    Command: toastr["success"]("Silme işlemi gerçekleşti.")

                                    toastr.options = {
                                        "closeButton": false,
                                        "debug": false,
                                        "newestOnTop": false,
                                        "progressBar": false,
                                        "positionClass": "toast-top-right",
                                        "preventDuplicates": false,
                                        "onclick": null,
                                        "showDuration": "300",
                                        "hideDuration": "1000",
                                        "timeOut": "8000",
                                        "extendedTimeOut": "1000",
                                        "showEasing": "swing",
                                        "hideEasing": "linear",
                                        "showMethod": "fadeIn",
                                        "hideMethod": "fadeOut"
                                    }
                                } else {
                                    Command: toastr["error"]("Silme işlemi gerçekleşemedi.")

                                    toastr.options = {
                                        "closeButton": false,
                                        "debug": false,
                                        "newestOnTop": false,
                                        "progressBar": false,
                                        "positionClass": "toast-top-right",
                                        "preventDuplicates": false,
                                        "onclick": null,
                                        "showDuration": "300",
                                        "hideDuration": "1000",
                                        "timeOut": "8000",
                                        "extendedTimeOut": "1000",
                                        "showEasing": "swing",
                                        "hideEasing": "linear",
                                        "showMethod": "fadeIn",
                                        "hideMethod": "fadeOut"
                                    }
                                }
                            }
                            if (companionTablo != null)
                                companionTablo.ajax.reload();
                        });

                    }
                });
        }
    </script>
    }